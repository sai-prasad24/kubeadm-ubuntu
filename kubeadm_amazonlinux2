#!/bin/bash
# common.sh
# copy this script and run in all master and worker nodes
# 1) Switch to root user [ sudo -i]
# 2) Disable swap & add kernel settings
swapoff -a
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
# 3) Add kernel settings & Enable IP tables (CNI Prerequisites)
cat <<EOF | tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF
modprobe overlay
modprobe br_netfilter
cat <<EOF | tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward = 1
EOF
sysctl --system
# 4) Install containerd runtime
# Install containerd runtime
amazon-linux-extras install epel -y
yum install -y yum-utils device-mapper-persistent-data lvm2
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum update -y
yum install -y containerd.io
# Generate default configuration file for containerd
containerd config default > /etc/containerd/config.toml
# Run following command to update configure cgroup as systemd for containerd.
sed -i 's/SystemdCgroup\ =\ false/SystemdCgroup\ =\ true/g' /etc/containerd/config.toml
# Restart and enable containerd service
systemctl restart containerd
systemctl enable containerd
# 5) Installing kubeadm, kubelet and kubectl
# Update the yum package index and install packages needed to use the Kubernetes yum repository:
yum update -y
yum install -y yum-utils device-mapper-persistent-data lvm2
# Download the Google Cloud public signing key:
rpm --import https://packages.cloud.google.com/apt/doc/rpm-package-key.gpg
# Add the Kubernetes yum repository:
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/apt/doc/rpm-package-key.gpg
       https://packages.cloud.google.com/apt/doc/apt-key.gpg
EOF
# Update yum package index, install kubelet, kubeadm and kubectl, and pin their version:
yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
# Enable and start kubelet service
systemctl daemon-reload
systemctl enable kubelet
systemctl start kubelet
